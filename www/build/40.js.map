{"version":3,"sources":["../../src/pages/tnb-seal/sealsweep/addsealsweep/addsealsweep.ts","../../src/pages/tnb-seal/sealsweep/addsealsweep/addsealsweep.module.ts"],"names":[],"mappings":"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","file":"40.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, App, LoadingController, AlertController } from 'ionic-angular';\nimport { BarcodeScanner, BarcodeScannerOptions } from '@ionic-native/barcode-scanner';\nimport { DataServiceProvider } from \"../../../../providers/data-service/data-service\";\nimport { Toast } from '@ionic-native/toast';\n\n/**\n * Generated class for the AddsealsweepPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-addsealsweep',\n  templateUrl: 'addsealsweep.html',\n})\nexport class AddsealsweepPage {\n\n  private options: BarcodeScannerOptions;\n  private actualstart: string;\n  private actualfinish: string;\n  public refSealSegment: string = 'MSOK';\n  public ta4serialnum: any;\n  public ta4sweepline: any = [];\n  public startDate: String;\n  public startTime: String;\n  public showDeviceStatus:boolean = false;\n  private sealsweeplist: any = [];\n\n  constructor(\n    public appCtrl: App,\n    public navCtrl: NavController, \n    private dataService: DataServiceProvider,\n    public loadingCtrl: LoadingController,\n    private barcodeScanner: BarcodeScanner,\n    private toast: Toast,\n    private alertCtrl: AlertController,\n    public navParams: NavParams) {\n    \n      this.actualstart = this.getactualTime();\n  }\n\n  goBack() {\n\n    let newRootNav = <NavController>this.appCtrl.getRootNavById('n4');\n    newRootNav.push(\"ListsealsweepPage\", '');\n  }\n\n  sealSegClick() {\n\n    let refresh = this.loadingCtrl.create({\n      content: 'Refreshing...'\n    });\n    refresh.present();\n    if (this.refSealSegment == 'MSOK') {\n\n      refresh.dismiss();\n    }\n    if (this.refSealSegment == 'MSNOTOK') {\n  \n      refresh.dismiss();\n    }\n  }\n\n  barcodeScan() {\n\n    this.options = {\n      prompt: \"Scan your barcode\"\n    }\n    this.barcodeScanner.scan(this.options).then(\n      (barcodeData) => {\n        this.ta4serialnum =  barcodeData.text.trim(); \n        this.submitScan();\n      }, \n      (err) => {\n        this.toast.show(err, '5000', 'center').subscribe(\n          toast => { console.log(toast); }\n        );\n      });\n  }\n\n  submitScan() {\n\n    if(this.ta4serialnum !== '' && typeof(this.ta4serialnum) !== 'undefined' && this.ta4serialnum !== null) {\n\n      if(!this.sealsweeplist.includes(this.ta4serialnum)) {\n        this.sealsweeplist.push(this.ta4serialnum);\n        this.ta4sweepline.push({ 'ta4serialnum': this.ta4serialnum });\n        this.showDeviceStatus = this.ta4sweepline.length > 0 ? true: false;\n        this.ta4serialnum = \"\";\n      }\n      else {\n        let alert = this.alertCtrl.create({\n          title: 'Alert !',\n          subTitle: this.ta4serialnum + \" This device is already available\",\n          buttons: [\n            {\n              text: 'Ok',\n              handler: () => {\n                this.ta4serialnum = \"\";\n                console.log('Successfully created seal sweep record');\n              }\n            }\n          ]\n        });\n        alert.present();\n      }\n    }\n  }\n\n  resetScan() {\n\n    this.ta4serialnum = \"\";\n  }\n\n  trashScan(index) {\n\n    this.ta4sweepline.splice(index,1);\n    this.showDeviceStatus = this.ta4sweepline.length > 0 ? true: false;\n  }\n\n  getactualTime() {\n\n    var currentdate = new Date(); \n    this.startDate = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear();\n    this.startTime = currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n    return this.formatAMPM();\n  }\n\n  getfinishTime() {\n\n    var currentdate = new Date(); \n    return this.formatAMPM();\n  }\n\n\n  formatAMPM() {\n    \n    var date = new Date();\n    var year = date.getFullYear();\n    var month = (date.getMonth() + 1);\n    var dat = date.getDate();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var seconds = date.getSeconds();\n    var strTime = '';\n    \n    if(minutes < 10) {\n\n      if(month < 10) {\n        \n        strTime = year + '-' + '0' + month + '-' + dat + 'T' + hours + ':' + '0' + minutes + ':' + seconds;\n      }\n      else {\n        \n        strTime = year + '-' + month + '-' + dat + 'T' + hours + ':' + '0' + minutes + ':' + seconds;\n      }\n    }\n    else {\n\n      if(month < 10) {\n        \n        strTime = year + '-' + '0' + month + '-' + dat + 'T' + hours + ':' + minutes + ':' + seconds;\n      }\n      else {\n        \n        strTime = year + '-' + month + '-' + dat + 'T' + hours + ':' + minutes + ':' + seconds;\n      }\n    }\n    return strTime;\n}\n\n  saveSweep() {\n\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n  \n    loading.present();\n    this.actualfinish = this.getfinishTime();\n    var sweepType = this.refSealSegment;\n    var newItem = {\n      \"actualstart\": this.actualstart,\n      \"actualfinish\": this.actualfinish,\n      \"ta4sweepline\": this.ta4sweepline\n    }\n    console.log(\"newItem : \"+JSON.stringify(newItem));\n    this.dataService\n        .storeSealSweepDetails(sweepType, newItem)\n        .then(results => {\n          let res: any;\n          res = results;\n\n        if (res.responseJSON.processStatus === 'success') {\n          let alert = this.alertCtrl.create({\n            title: 'Success !',\n            subTitle: res.responseJSON.respObject,\n            buttons: [\n              {\n                text: 'Ok',\n                handler: () => {\n                  console.log('Successfully created seal sweep record');\n                  loading.dismiss();\n                  this.goBack();\n                }\n              }\n            ]\n          });\n          alert.present();\n        }\n        else {\n          let alert = this.alertCtrl.create({\n            title: 'Failed !',\n            subTitle: \"Failed to create MSOK Seal sweep...\",\n            buttons: [\n              {\n                text: 'Ok',\n                handler: () => {\n                  loading.dismiss();\n                  console.log('Failed created seal sweep record');\n                }\n              }\n            ]\n          });\n          alert.present();\n        }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tnb-seal/sealsweep/addsealsweep/addsealsweep.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddsealsweepPage } from './addsealsweep';\n\n@NgModule({\n  declarations: [\n    AddsealsweepPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddsealsweepPage),\n  ],\n})\nexport class AddsealsweepPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tnb-seal/sealsweep/addsealsweep/addsealsweep.module.ts"],"sourceRoot":""}